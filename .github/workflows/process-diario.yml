name: Process DiÃ¡rio Oficial

on:
  push:
    branches: [ main, master ]
    paths:
      - 'diarios/*.pdf'
      - 'PROMPT.md'
      - '.github/workflows/process-diario.yml'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  process-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm init -y
          npm install axios
          pip install markitdown
      
      - name: Convert PDFs to markdown
        run: |
          for pdf in diarios/*.pdf; do
            if [ -f "$pdf" ]; then
              filename=$(basename "$pdf" .pdf)
              output_file="simplificados/${filename}.md"
              if [ ! -f "$output_file" ]; then
                python -m markitdown "$pdf" -o "$output_file"
                echo "Converted: $pdf -> $output_file"
              else
                echo "Skipped: $output_file already exists"
              fi
            fi
          done
      
      - name: Process document with OpenRouter
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          node higieniza-diario.js
      
      - name: Create docs directory for GitHub Pages
        run: |
          mkdir -p docs
          cp processed.md docs/
          cp -r simplificados docs/ 2>/dev/null || true
          
          # Create index.html that lists all markdown files
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="pt-BR">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>DiarreIA - Documentos Processados</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .file-list { list-style: none; padding: 0; }
                  .file-list li { padding: 8px 0; border-bottom: 1px solid #eee; }
                  .file-list a { text-decoration: none; color: #0366d6; }
                  .file-list a:hover { text-decoration: underline; }
                  .timestamp { color: #666; font-size: 0.9em; }
              </style>
          </head>
          <body>
              <h1>ðŸš½ DiarreIA - Documentos Processados</h1>
              <p>DiÃ¡rios Oficiais higienizados em linguagem simples</p>
              
              <h2>ðŸ“„ Documento Processado Principal</h2>
              <ul class="file-list">
                  <li><a href="processed.md">processed.md</a> - Documento mais recente processado</li>
              </ul>
              
              <h2>ðŸ“‚ ConversÃµes PDF â†’ Markdown</h2>
              <ul class="file-list" id="markdown-files">
                  <li>Carregando arquivos...</li>
              </ul>
              
              <div class="timestamp">
                  Ãšltima atualizaÃ§Ã£o: $(date '+%d/%m/%Y %H:%M')
              </div>
              
              <script>
                  // List markdown files dynamically
                  fetch('./simplificados/')
                      .then(response => response.text())
                      .then(html => {
                          const parser = new DOMParser();
                          const doc = parser.parseFromString(html, 'text/html');
                          const links = doc.querySelectorAll('a[href$=".md"]');
                          const markdownList = document.getElementById('markdown-files');
                          
                          if (links.length === 0) {
                              markdownList.innerHTML = '<li>Nenhum arquivo markdown encontrado</li>';
                          } else {
                              markdownList.innerHTML = '';
                              links.forEach(link => {
                                  const li = document.createElement('li');
                                  const a = document.createElement('a');
                                  a.href = './simplificados/' + link.getAttribute('href');
                                  a.textContent = link.textContent;
                                  li.appendChild(a);
                                  markdownList.appendChild(li);
                              });
                          }
                      })
                      .catch(() => {
                          document.getElementById('markdown-files').innerHTML = '<li>Erro ao carregar lista de arquivos</li>';
                      });
              </script>
          </body>
          </html>
          EOF
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4